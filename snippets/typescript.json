{
    /*
      // Place your snippets for TypeScript here. Each snippet is defined under a snippet name and has a prefix, body and 
      // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
      // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
      // same ids are connected.
      // Example:
      "Print to console": {
          "prefix": "log",
          "body": [
              "console.log('$1');",
              "$2"
          ],
          "description": "Log output to console"
      }
  */
    "Print to console": {
      "prefix": "log",
      "body": [
        "console.log('$1');",
        "$2"
      ],
      "description": "Log output to console"
    },
    "Controller": {
      "prefix": "controller",
      "body": [
        "export default class $1Controller {",
        "  constructor($2) {",
        "    $3",
        "  }$4",
        "}",
        ""
      ],
      "description": "Create a Controller class"
    },
    "OSpec test": {
      "prefix": "ospec",
      "body": [
        "import * as o from \"mithril/ospec/ospec\";",
        "",
        "o.spec(\"$1\", () => {",
        "  o(\"$2\", () => {",
        "    $3",
        "    o($4).equals($5);",
        "  });$6",
        "});",
        ""
      ],
      "description": "Create a Controller class"
    },
    "Export function": {
      "prefix": "export function",
      "body": [
        "export function $1($2): $3 {",
        "  $4",
        "}",
        "",
        "$5"
      ],
      "description": "Export function"
    },
    "Export lambda": {
      "prefix": "export lambda",
      "body": [
        "export const $1 = ($2): $3 => {",
        "  $4",
        "};",
        "",
        "$5"
      ],
      "description": "Export lambda function"
    }
  }